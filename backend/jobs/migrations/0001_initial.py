# Generated by Django 5.2.6 on 2025-09-21 00:07

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0007_entreprise'),
    ]

    operations = [
        migrations.CreateModel(
            name='Offre',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('titre', models.CharField(max_length=200, verbose_name='Titre du poste')),
                ('description', models.TextField(verbose_name='Description du poste')),
                ('secteur_activite', models.CharField(max_length=100, verbose_name="Secteur d'activité")),
                ('competences_requises', models.JSONField(default=list, verbose_name='Compétences requises')),
                ('localisation', models.CharField(max_length=200, verbose_name='Localisation')),
                ('type_contrat', models.CharField(choices=[('CDI', 'CDI'), ('CDD', 'CDD'), ('Stage', 'Stage'), ('Freelance', 'Freelance'), ('Temps partiel', 'Temps partiel')], max_length=20, verbose_name='Type de contrat')),
                ('type_stage', models.CharField(blank=True, choices=[('Stage court', 'Stage court'), ('Stage long', 'Stage long'), ('PFE', 'PFE')], max_length=20, null=True, verbose_name='Type de stage')),
                ('duree_mois', models.PositiveIntegerField(default=0, verbose_name='Durée en mois')),
                ('salaire_min', models.DecimalField(decimal_places=0, default=0, max_digits=10, verbose_name='Salaire minimum (FCFA)')),
                ('salaire_max', models.DecimalField(decimal_places=0, default=0, max_digits=10, verbose_name='Salaire maximum (FCFA)')),
                ('salaire_text', models.CharField(blank=True, max_length=100, verbose_name='Salaire (texte libre)')),
                ('niveau_etudes', models.CharField(choices=[('Bac', 'Bac'), ('Bac+2', 'Bac+2'), ('Bac+3', 'Bac+3'), ('Bac+5', 'Bac+5'), ('Doctorat', 'Doctorat')], max_length=20, verbose_name="Niveau d'études")),
                ('niveau_experience', models.CharField(choices=[('Sans expérience', 'Sans expérience'), ('Débutant', 'Débutant'), ('Intermédiaire', 'Intermédiaire'), ('Expérimenté', 'Expérimenté'), ('Senior', 'Senior'), ('Expert', 'Expert')], max_length=20, verbose_name="Niveau d'expérience")),
                ('experience_requise', models.PositiveIntegerField(default=0, verbose_name='Expérience requise (années)')),
                ('date_publication', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Date de publication')),
                ('date_expiration', models.DateTimeField(verbose_name="Date d'expiration")),
                ('statut', models.CharField(choices=[('active', 'Active'), ('expiree', 'Expirée'), ('suspendue', 'Suspendue'), ('supprimee', 'Supprimée')], default='active', max_length=20, verbose_name='Statut')),
                ('nombre_candidats', models.PositiveIntegerField(default=0, verbose_name='Nombre de candidats')),
                ('nombre_candidatures', models.PositiveIntegerField(default=0, verbose_name='Nombre de candidatures')),
                ('avantages', models.JSONField(default=list, verbose_name='Avantages')),
                ('processus_recrutement', models.TextField(blank=True, verbose_name='Processus de recrutement')),
                ('contact_email', models.EmailField(max_length=254, verbose_name='Email de contact')),
                ('contact_telephone', models.CharField(max_length=20, verbose_name='Téléphone de contact')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True, verbose_name='Offre active')),
                ('entreprise', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='offres', to='accounts.entreprise')),
            ],
            options={
                'verbose_name': "Offre d'emploi",
                'verbose_name_plural': "Offres d'emploi",
                'ordering': ['-date_publication'],
            },
        ),
        migrations.CreateModel(
            name='Favori',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('date_ajout', models.DateTimeField(default=django.utils.timezone.now, verbose_name="Date d'ajout")),
                ('candidat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favoris', to='accounts.candidateprofile')),
                ('offre', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favoris', to='jobs.offre')),
            ],
            options={
                'verbose_name': 'Favori',
                'verbose_name_plural': 'Favoris',
                'ordering': ['-date_ajout'],
                'unique_together': {('candidat', 'offre')},
            },
        ),
        migrations.CreateModel(
            name='Candidature',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('cv_path', models.FileField(upload_to='candidatures/cv/', verbose_name='CV')),
                ('lettre_motivation_path', models.FileField(blank=True, null=True, upload_to='candidatures/lettres/', verbose_name='Lettre de motivation')),
                ('statut', models.CharField(choices=[('envoyee', 'Envoyée'), ('vue', 'Vue'), ('en_cours', 'En cours'), ('acceptee', 'Acceptée'), ('refusee', 'Refusée')], default='envoyee', max_length=20, verbose_name='Statut')),
                ('date_candidature', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Date de candidature')),
                ('date_vue', models.DateTimeField(blank=True, null=True, verbose_name='Date de consultation')),
                ('score_matching', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(100.0)], verbose_name='Score de matching (%)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('candidat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='candidatures', to='accounts.candidateprofile')),
                ('offre', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='candidatures', to='jobs.offre')),
            ],
            options={
                'verbose_name': 'Candidature',
                'verbose_name_plural': 'Candidatures',
                'ordering': ['-date_candidature'],
                'unique_together': {('candidat', 'offre')},
            },
        ),
    ]
